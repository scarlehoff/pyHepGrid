- Warmup and dat files in ARC/DIRAC sandbox - if job fails halfway through you can retrieve output... Alternatively, find whether there is a "backup" system so that we can copy the files somewhere else. It might also be a problem with lfc-ls?...

- Have -kill for socketed jobs remove socket server 
|=> unique filename for each session stored in database

- Make the script gfal ready...

- Option to do arcsync from main.py so that it queries the database and we only do arcsync for jobs and CEs that are actually being used.

- Play around with priority systems for get_site_info.py 

- shell script that sets up:
  - proxy generation crontabs
  - LFC directories
  - additional necessary lines in .bashrc

- Backend.py . _check_production_warmup should take as input the "info" dictionary with all the information from the NNLOJET runcard. The info dictionary should be parsed by a separate class.

- Investigate race condition between netcat and the server when the check for a server happens at the same time as it is retrieving data from NNLOJET.
    - Option 1: Remove the ability to fire up remote sockets altogether
    - Option 2 (preferred): Receive error codes through tmux through ssh 

###### Done in the form of a bash script
- Support for passing multiple runcards for initialisation/submission at once (requires modules reloading for runcard.py overrides)

# DONE #
- Runcard test function which takes the setup to be initialised and check it runs ok
- add a parameter to the runcard so the warmup folder directory (for initialisation) can also be given there instead of using -w warmup.warm.vRa
- Make all print-with-color into functions "print_warning", "print_error", etc
- Make main.py to run the socket server automagically

# IDEAS GRAVEYARD #
- Send production as subjobs for arc [if possible - NOT POSSIBLE]
